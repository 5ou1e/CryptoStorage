"""empty message

Revision ID: 1fcdfc8609b8
Revises: 250b4deb5290
Create Date: 2025-04-20 06:03:28.684802

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1fcdfc8609b8"
down_revision: Union[str, None] = "250b4deb5290"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "wallet_copyable",
        sa.Column("wallet_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["wallet_id"], ["wallet.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("wallet_id"),
    )
    op.create_table(
        "wallet_filtered",
        sa.Column("wallet_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["wallet_id"], ["wallet.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("wallet_id"),
    )
    op.alter_column(
        "user",
        "username",
        existing_type=sa.VARCHAR(length=150),
        type_=sa.String(length=50),
        nullable=True,
    )
    op.alter_column(
        "user",
        "email",
        existing_type=sa.VARCHAR(length=254),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "hashed_password",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "date_joined",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.drop_index("user_username_cf016618_like", table_name="user")
    op.create_unique_constraint(None, "user", ["email"])
    op.alter_column(
        "user_wallet",
        "created_at",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=False,
    )
    op.drop_index("user_wallet_user_id_a648fb4c", table_name="user_wallet")
    op.drop_constraint("user_wallet_user_id_wallet_id_9ae37655_uniq", "user_wallet", type_="unique")
    op.drop_index("user_wallet_wallet_id_86a7d371", table_name="user_wallet")
    op.create_unique_constraint("uq_user_wallet", "user_wallet", ["user_id", "wallet_id"])
    op.drop_constraint("user_wallet_user_id_a648fb4c_fk_user_id", "user_wallet", type_="foreignkey")
    op.drop_constraint("user_wallet_wallet_id_86a7d371_fk_wallet_id", "user_wallet", type_="foreignkey")
    op.create_foreign_key(None, "user_wallet", "user", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "user_wallet", "wallet", ["wallet_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user_wallet", type_="foreignkey")
    op.drop_constraint(None, "user_wallet", type_="foreignkey")
    op.create_foreign_key(
        "user_wallet_wallet_id_86a7d371_fk_wallet_id",
        "user_wallet",
        "wallet",
        ["wallet_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.create_foreign_key(
        "user_wallet_user_id_a648fb4c_fk_user_id",
        "user_wallet",
        "user",
        ["user_id"],
        ["id"],
        initially="DEFERRED",
        deferrable=True,
    )
    op.drop_constraint("uq_user_wallet", "user_wallet", type_="unique")
    op.create_index("user_wallet_wallet_id_86a7d371", "user_wallet", ["wallet_id"], unique=False)
    op.create_unique_constraint(
        "user_wallet_user_id_wallet_id_9ae37655_uniq",
        "user_wallet",
        ["user_id", "wallet_id"],
    )
    op.create_index("user_wallet_user_id_a648fb4c", "user_wallet", ["user_id"], unique=False)
    op.alter_column(
        "user_wallet",
        "created_at",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=False,
    )
    op.drop_constraint(None, "user", type_="unique")
    op.create_index("user_username_cf016618_like", "user", ["username"], unique=False)
    op.alter_column(
        "user",
        "date_joined",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "user",
        "hashed_password",
        existing_type=sa.String(length=255),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "email",
        existing_type=sa.String(length=255),
        type_=sa.VARCHAR(length=254),
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "username",
        existing_type=sa.String(length=50),
        type_=sa.VARCHAR(length=150),
        nullable=False,
    )
    op.drop_table("wallet_filtered")
    op.drop_table("wallet_copyable")
    # ### end Alembic commands ###
